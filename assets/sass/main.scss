html {
	height: 100%;
	width: 100%;
	display: block;
	overflow: hidden;
}
body {
	height: 100%;
	display: block;
	margin: auto;
	overflow-y: scroll;
	overflow-x: hidden;
	-webkit-overflow-scrolling: touch;
	border-bottom: black;
	color:black;
	font: {
		family: 'Lora', serif;
		size: 45px;
		weight: 400;
	}
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	text-rendering: optimizeLegibility;
	line-height: 1em;
}
html * {
	user-select: none;
}
a {
	color: inherit;
	text-decoration: none;
	border-bottom: 3px solid;
	padding-bottom: 0.1em;
	transition: color 200ms ease-in-out;
	&:hover {
		cursor: alias !important;
	}
}
sup {
	font-size: 0.5em;
	margin-left: -0.4em;
	&:hover {
		cursor: s-resize !important;
	}
	a {
		border: none;
		padding: 0 2px;
		&:hover {
			cursor: s-resize !important;
		}
	}
}
ul {
	margin: 0;
	font-size: 0.55em;
  line-height: 1.25em;
  text-align: left;
}
li {
	margin: 0 0 .5em 0;
	&:last-child {
		margin: 0;
	}
}
.wrapper {
	width: 100%;
	max-width: 980px;
	height: auto;
	min-height: 100%;
	display: table;
	margin: 0 auto;
	position: relative;
	opacity: 0;
	transition: opacity 200ms 200ms ease-in-out;
	&.loaded {
		opacity: 1;
	}
}
main {
	min-height: calc(100vh - 100px);
	padding: 50px 0;
	display: table;
	i, a, em {
		display: inline-table;
		hyphens: manual;
		word-break: break-word;
	}
	.inner {
		display: table-cell;
		vertical-align: middle;
		position: relative;
		font-size: 1em;
		line-height: 1.4em;
		padding-bottom: 1.4em;
		p {
			margin: 0;
			padding: .5em;  
		}
		a {
			cursor: alias;
			line-height: 0.95em;
		}
		i {
			font-style: normal;
			transform-style: preserve-3d;
			perspective: 1000;
		}
		em {
			font-style: normal;
		}
	}
}
.symbols {
	position: absolute;
	left: 30px;
	bottom: 0px;
	.symbol {
		text-decoration: none !important;
		border-bottom: none !important;
		&:hover {
			cursor: pointer;
		}
		svg {
			height: 1em !important;
			width: auto;
			display: inline-table;
			fill: currentColor;
			transform: translate3d(0,0,0);
			backface-visibility: visible;
			&:hover {
				cursor: pointer;
			}
		}
	}
}
.symbol[data-action='peace'] {
	transform: scale(1.8);
	margin-right: 20px;
}
.symbol[data-action='love'] {
	transform: scale(1.4);
	margin-left: 10px;
} 
.symbol:hover, .action.big {
	cursor: pointer;
}

#notes {
	width: 100%;
	.note {
		width: 100%;
		padding: 2em 0;
		position: relative;
		.inner {
			width: 80%;
			max-width: 980px;
			display: table;
			margin: auto;
		}
		&#currently {
			padding-bottom: 1em;
			.inner {
		    width: calc(100% - 3.5em);
		    max-width: calc(100% - 3.5em);
		    padding: 1em;
		    margin: auto;
		    border: .25em solid;
		    display: block;
			}
			.text {
				padding: 0;
			}
		}

		$corner-size: 10em;
		$corner-width: 20px;
		$corner-len: 80px;
		$corner-gap: 20px;
		&#four-corners {
			@include note(#212529, #f4f7fe, #afd5ff, #212529);
			position: relative;
			.corner {
				width: $corner-size;
				height: $corner-size;
				position: absolute;
				z-index: 4;
				filter: drop-shadow(0 0 1px rgba(#212529,.25));
				transform: translate3d(0,0,0);
				&::after, &::before {
					content: '';
					position: absolute;
					z-index: 4;
					background-color: #afd5ff;
				}
				&.authorship {
					bottom: $corner-width;
					right: $corner-width;
					&::before {
						width: $corner-width;
						height: $corner-len;
						right: $corner-gap;
						bottom: $corner-gap;
					}
					&::after {
						width: $corner-len;
						height: $corner-width;
						right: $corner-gap;
						bottom: $corner-gap;
					}
				}
				&.backstory {
					bottom: $corner-width;
					left: $corner-width;
					&::before {
						width: $corner-width;
						height: $corner-len;
						left: $corner-gap;
						bottom: $corner-gap;
					}
					&::after {
						width: $corner-len;
						height: $corner-width;
						left: $corner-gap;
						bottom: $corner-gap;
					}
				}
				&.imagery {
					top: $corner-width;
					left: $corner-width;
					&::before {
						width: $corner-width;
						height: $corner-len;
						left: $corner-gap;
						top: $corner-gap;
					}
					&::after {
						width: $corner-len;
						height: $corner-width;
						left: $corner-gap;
						top: $corner-gap;
					}
				}
				&.links {
					top: $corner-width;
					right: $corner-width;
					&::before {
						width: $corner-width;
						height: $corner-len;
						right: $corner-gap;
						top: $corner-gap;
					}
					&::after {
						width: $corner-len;
						height: $corner-width;
						right: $corner-gap;
						top: $corner-gap;
					}
				}
			}
		}
		&#nakba {
			@include note(white, black, #ff0, #ff0);
			// background-size: cover;
			// background-position: center;
			// background-repeat: no-repeat;
			// background-image: url(../images/ygdp.svg); 
		}
		&#ygdp {
			@include note(#153554, #a8d7ee, #e1e8ea, #f2f2ee);
			background-size: cover;
			background-position: center;
			background-repeat: no-repeat;
			background-image: url(../images/ygdp.svg); 
		}
		&#ginling {
			@include note(#f2f0df, #0dae0b, #f2f0df, #f2f0df);
			background-image: url(../images/ginling.png);
			background-size: 50% auto;
			background-position: 0 top;
			background-repeat: no-repeat;
			h1 a {
				text-shadow: none;
			}
		}
		&#bpl {
			@include note(white, #8199ff, white, white);
		}
		&#revealer {
			@include note(#346378, #f1f5f7, #fed00b, #346378);
			.halo {
				width: 5em;
				height: 5em;
				left: calc(50% - 2.5em);
				top: calc(50% - 2.5em);
				position: absolute;
				border-radius: 50%;
				box-shadow: 0 0 0.5em 0.25em #fed00b;
				z-index: 0;
				background: #fed00b;
			}
		}
		&#rz {
			@include note(#d02630, #f8e5e3, #d02630, #d02630);
			.pattern {
				width: 100%;
				height: 45px;
				background-size: 30px 15px;
				background-image: url(../images/zim.svg);
				position: absolute;
				left: 0;
				&.top {
					top: 1px;
				}
				&.bottom {
					bottom: 1px; 
				}
			}
		}
		&#mts {
			background-image: url(../images/map.jpg);
			background-size: cover;
			background-position: center;
			background-repeat: no-repeat;
			@include note(#fafcfc, black, #fafcfc, #f4f6fa);
		}
		&#iscp {
			position: relative;
			background: #ff5000;
			color: #fff;
			transition: background 150ms ease-in-out;
			a {
				color: #fff;
				@include underline(#fff, #ff5000, #fff, 2px);
			}
			.inner {
				width: calc(100% - 7em);
			}
			.sandwich {
				border-top: .2em solid white;
				border-bottom: .2em solid white;
				padding: 1em 0;
				margin: .6em 0;
			}
			.side {
				position: absolute;
				top: 0;
				width: 3em;
				height: 100%;
				background: #ff5000;
				.inner {
					width: 2.6em;
					height: 100%;
					margin: 0;
					.top {
						width: 2.4em;
						height: 2.6em;
						position: absolute;
						top: 0;
						border-bottom: .2em solid white;
					}
					.bottom {
						width: 2.4em;
						height: 2.6em;
						position: absolute;
						bottom: 0;
						border-top: .2em solid white;
					}
				}
				&.left {
					left: 0;
					.inner {
						margin-right: .2em;
						border-right: .2em solid white;
						.top, .bottom {
							left: 0;
						}
					}
				}
				&.right {
					right: 0;
					.inner {
						margin-left: .2em;
						border-left: .2em solid white;
						.top, .bottom {
							right: 0;
						}
					}
				}
			}
		}
		&#compost-pile {
			background: #73db71;
			color: #fbfffb;
			position: relative;
			overflow: hidden;
			canvas {
				pointer-events: none;
				position: absolute;
				top: 0;
				left: 0;
				z-index: 10;
				display: none;
			}
			a {
				color: #fbfffb;
				@include underline(#fbfffb, #73db71, #fbfffb, 2px);
			}
			background-size: cover;
			background-position: center;
			background-repeat: no-repeat;
			background-image: url(../images/compost.svg); 
		}
		&#af-fixing-ceremony {
			background: white;
			color: black;
			a {
				color: black;
				@include underline(red, white, red, 2px);
			}
		}
		&#pcgd {
			background: #333399;
			color: #FFFF33;
			a {
				color: #FFFF33;
				@include underline(#FFFF33, #333399, #FFFF33, 2px);
			}
			.svg {
				width: 1em;
				height: 1em;
				position: relative;
				display: inline-block;
				cursor: pointer !important;
				&:hover {
					cursor: pointer !important;
				}
				svg {
					width: 1em;
					position: absolute;
					bottom: -2px;
					right: 0;
					display: none;
					line-height: 1.2em;
					vertical-align: baseline;
					fill: #FFFF33 !important;
					* {
						fill: #FFFF33 !important;
					}
					&:first-of-type {
						display: inline-block;
					}
				}
			}
		}
		&#rbma {
			background: #000000;
			color: #FEF035;
			&.confetti {
				background-size: auto;
				background-repeat: repeat;
				background-position: center;
				background-image: url(../images/confetti.gif); 
			}
			a {
				color: #FEF035;
				@include underline(#FEF035, black, #FEF035, 2px);
			}
			.click {
				height: 1.4em;
				padding-right: 0.5em;
				img {
					margin-bottom: -0.25em;
					height: inherit;
				}
				&:hover, .hover, &:hover img {
					cursor: pointer !important;
					animation: wiggle 300ms infinite;
				}
				&.logo {
					span {
						background-image: url(../images/underline.png);
						background-size: 12px 8px;
						background-position: 0px bottom;
						background-repeat: repeat-x;
						text-shadow: -2px 2px 1px black, 2px -2px 1px black, -2px -2px 1px black, 2px 2px 1px black;
					}
				}
				&.japan {
					position: relative;
					&.toggled {
						img {
							display: inline-block !important;
							visibility: hidden;
						}
					}
					iframe {
						position: absolute;
						transform: scale(0.28);
						transform-origin: top left;
						top: -35%;
						left: 0;
						pointer-events: none;
					}
				}
			}
		}
		&#qr {
			background: white;
			color: black;
			a {
				color: black;
				@include underline(black, white, black, 2px);
			}
		}
	}
	h1, h2, h3, h4 {
		margin: 0;
		display: inline;
		font-weight: normal;
		a {
			color: inherit !important;
			font-style: italic;
		}
	}
	h2, h4 {
		a {
			color: inherit !important;
			font-style: italic;
			border: none !important;
			background: none !important;
			text-shadow: none !important;
		}
	}
	h1 {
		font-size: 1em;
		line-height: 1.1em;
		display: table;
		padding: 0 0 10px 0;
		a {
			font-style: normal;
		}
	}
	h2 {
		font-size: 0.55em;
		line-height: 1.5em;
		display: block;
	}
	h3 {
		font-size: 0.55em;
		line-height: 1em;
		a {
			@include underline(black, white, black, 1px);
		}
	}
	h4 {
		display: table;
		font-size: 0.4em;
		line-height: 1.3em;
		margin-top: .5em;
	}
	.out:hover {
		cursor: alias !important;
	}
	.text {
		margin: 2em 0;
		text-align: justify;
		position: relative;
		&.max {
			height: auto;
			max-height: 16em;
			overflow: hidden;
			transition: max-height 200ms ease;
			&.tease {
				max-height: 17em;
				.shadow {
					height: 4em;
				}
			}
			&.show {
				max-height: auto;
				height: 100%;
			}
		}
    .shadow {
    	width: 100%;
    	height: 3em;
    	left: 0;
    	bottom: 0;
    	position: absolute;
    	z-index: 100;
    	transition: box-shadow 200ms ease;
    	&:hover {
    		cursor: s-resize;
    	}
    }
		a {
			border-bottom-width: 0.1em;
		}
		p {
			font-size: 0.7em;
			line-height: 1.5em;
			margin: 0 0 1em 0;
			&:last-child {
				margin: 0;
			}
		}
	}
}

.toggle {
	*:first-child {
		display: inline-block;
	}
	*:last-child {
		display: none;
	}
	&.toggled {
		*:first-child {
			display: none;
		}
		*:last-child {
			display: inline-block;
		}
	}
}
@include style('wooden-airplane-lamp', yellow, blue, red);
@include style('blue', blue, white, yellow);
@include style('default', white, black, blue);
@include style('nighty', black, white, white);
@include style('spring', SpringGreen, black, black);
@include style('old-glory', RoyalBlue, white, Tomato);
@include style('ronald', red, white, Gold);
@include style('cactus', #fdbbcc, #f81c00, #f81c00);
@include style('long-sleeve', #f9e312, #00447c, #00447c);

.shadow main {
	text-shadow: 3px 3px 3px;
	a:hover {
		text-shadow: 2px 2px 3px;
	}
}
.farsighted main {
	filter: blur(8px);
}
.mini main {
	p {
		transform: scale(.2) !important;
	}
}
.jumbo main {
	p {
		transform: scale(2) !important;
	}
}
.italic main i:not(.symbol) {
	transform: rotateY(12deg) rotateX(12deg) rotateZ(12deg) !important;
}
.from main-the-other-side i:not(.action) {
	transform: rotateX(180deg) rotateY(180deg) !important;
}
.redacted main a, .redacted main em, .redacted main i {
	background: black !important;
	color: transparent !important;
	border: none !important;
  text-shadow: none !important;
}
.fan main i:not(.symbol) {
	animation: fan 200ms infinite linear;
}
main:not(.fan) i:not(.symbol) {	
	transform: rotateZ(0);
}