[{"/Users/coreytegeler/Sites/newnew/pages/_app.js":"1","/Users/coreytegeler/Sites/newnew/pages/api/hello.js":"2","/Users/coreytegeler/Sites/newnew/pages/index.js":"3","/Users/coreytegeler/Sites/newnew/components/ListItem.js":"4","/Users/coreytegeler/Sites/newnew/components/NestedList.js":"5"},{"size":166,"mtime":1638921880358,"results":"6","hashOfConfig":"7"},{"size":170,"mtime":1638921880359,"results":"8","hashOfConfig":"7"},{"size":4825,"mtime":1638924149271,"results":"9","hashOfConfig":"7"},{"size":1555,"mtime":1638921880359,"results":"10","hashOfConfig":"7"},{"size":237,"mtime":1638923496464,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zlebsy",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/coreytegeler/Sites/newnew/pages/_app.js",[],"/Users/coreytegeler/Sites/newnew/pages/api/hello.js",[],"/Users/coreytegeler/Sites/newnew/pages/index.js",["22"],"/Users/coreytegeler/Sites/newnew/components/ListItem.js",[],"/Users/coreytegeler/Sites/newnew/components/NestedList.js",[],{"ruleId":"23","severity":1,"message":"24","line":20,"column":73,"nodeType":"25","endLine":20,"endColumn":74},"react-hooks/exhaustive-deps","Assignments to the 'colorIndex' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal"]